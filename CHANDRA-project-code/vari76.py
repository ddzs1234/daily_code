#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Tue Sep 12 10:10:17 2017

@author: ashley
"""

#variablity F max/ fMIN
#|fi+1-fi|/|ti+1-ti|
id_76=['587739406263975969', '587735695913320507', '587741722823950350', '587738575141077053', '587734950206636184', '587736478663246023', '588017978367934481', '587725492133560559', '587739653178917142', '587732483298361346', '587739811557867629', '588017605759402010', '588017977830932577', '587736941982646347', '588015510359375943', '588017724937797740', '587734305956102215', '588017678766637317', '588017978367344774', '587739610240122885', '587726015610486920', '587727944570765435', '587742775628005405', '587726032772202638', '587741722823950376', '588017702935003225', '588017726004396191', '587736963458269204', '588017720109039787', '587736941983236183', '587731521745518723', '587738568704721023', '587736964532404456', '587739132420227075', '587733397572747445', '587736941982646368', '587736941982515310', '587727179536138389', '588017704006975536', '587738067276857369', '587736583892238376', '588017729225687122', '587736478663311375', '587727944034025722', '587739131883290710', '588017729225687153', '587736940908707897', '587727944034091201', '587727942960349392', '587736941446561802', '587735696451371138', '587734862143291453', '587739507154812964', '587734622705418410', '587738568710357008', '587726032772464813', '587739381520728095', '587739651034054771', '587726015610486895', '587741829122555933', '587733399708106826', '588295842853159031', '587735695377629420', '587727944033828980', '587739153355767830', '588010359083171914', '588015509266432129', '587739608096636999', '587735665842520176', '587727944034156582', '587736546849128655', '587728879804219571', '587731513142608119', '587736543631900803', '587739651034054894', '587729407545573613']
c_sdss=[180862, 185646, 271449, 235857, 266700, 35989, 135065, 223305, 53353, 166246, 137087, 184127, 70180, 221751, 35967, 422196, 449480, 225782, 422127, 228861, 178243, 35968, 266701, 22813, 346474, 123663, 363873, 264230, 70181, 121132, 120321, 71062, 256067, 132739, 236750, 184121, 144616, 118415, 337849, 32229, 431230, 451190, 360865, 244672, 406887, 452165, 244710, 147308, 132552, 35965, 212690, 319609, 450402, 317215, 185592, 260437, 56088, 459200, 337320, 184126, 422436, 317880, 265755, 155002, 395114, 196760, 196759, 166758, 319976, 194692, 417517, 35936, 9956, 22814, 280470, 416046]
c_csc=[1151, 1295, 509, 1381, 778, 239, 942, 1195, 16, 735, 1081, 1202, 733, 1280, 322, 1263, 607, 1380, 1228, 1537, 816, 335, 779, 219, 131, 1332, 361, 817, 734, 437, 171, 1481, 1039, 178, 1357, 1183, 12, 922, 493, 222, 707, 75, 26, 1226, 491, 731, 1240, 958, 84, 305, 636, 1404, 608, 1399, 1306, 881, 357, 610, 1557, 1212, 1161, 867, 1442, 201, 664, 967, 962, 1256, 730, 1313, 634, 330, 1478, 339, 672, 522]
z=[0.217004, 0.028714901, 0.0251863, 0.090263598, 0.0182711, 0.25971499, 0.0833335, 0.12891801, 0.052474, 0.41679499, 0.117513, 0.229671, 0.086627498, 0.19767299, 0.122951, 0.034309302, 0.0047546099, 0.0961354, 0.174922, 0.053399298, 0.0229926, 0.124118, 0.24249899, 0.13241, 0.164306, 0.29633, 0.0632485, 0.56528002, 0.086549602, 0.175271, 0.174485, 0.105335, 0.081856802, 0.085830703, 0.084555, 0.334398, 0.044265401, 0.000870093, 0.0420698, 0.34536999, 0.0304274, 0.11433, 0.186225, 0.195775, 0.0048817298, 0.043554999, 0.141322, 0.074496001, 0.105397, 0.044556599, 0.00104037, 0.088335499, 0.00127573, 0.089666396, 0.296547, 0.0261233, 0.098905399, 0.074700698, 0.12880699, 0.028392499, 0.172895, 0.058924899, 0.029830299, 1.97519, 0.124857, 2.5602701, 0.25656301, 0.0132108, 0.298022, 0.040263399, 0.00183355, 0.104226, 0.084337503, 0.124805, 0.25585699, 0.128168]

cxo_sdss=open('/home/ashley/xray/cxo-sdssmatch.file','r')
c=cxo_sdss.readlines()
c0=[]
for i in range(3,len(c),1):
    c0.append(c[i])
name=[n.strip().split('$')[1] for n in c0]
objid=[n.strip().split('$')[3] for n in c0]
name_cxo=[]
for i in range(0,len(id_76),1):
    index=objid.index(id_76[i])
    name_cxo.append(name[index])
from astropy.io import fits
import matplotlib.pyplot as plt
import numpy as np
#cscresult.file
csc=fits.open('/home/ashley/xray/csc.fits')
name_csc=np.ndarray.tolist(csc[1].data.field('name'))
i=0
var=[]#y
z1=[]#x
ratio_y=[]#y
m=1
#lianxi xie shuju:
#file=open('/home/ashley/xray/info_match','w')
while i<len(name_cxo):
#    plt.figure(m)
    name_find=name_cxo[i]
    if name_find in name_csc:
        index_csc=name_csc.index(name_find)
        acis_num=csc[1].data[index_csc][3]
        z_final=z[i]
        
    #huoqu flux he time info
        flux=[]
        mjd=[]
        for j in range(index_csc,index_csc+acis_num,1):
            if csc[1].data[j][5]>=0:
                flux.append(csc[1].data[j][6])
                mjd.append(csc[1].data[j][5])
            else:
                flux.append(csc[1].data[j][7])
                mjd.append(csc[1].data[j][5])
        #first picture
        #print(flux,mjd,name_find,index_csc)
 #       file.writelines(map(str,flux))
 #      file.writelines(map(str,mjd))
  
#      file.writelines(name_find)
 #       file.writelines(str(index_csc))
        flux_max=np.max(flux)
        flux_min=np.min(flux)
        flux_no0=[n for n in flux if n>0]
        if len(flux_no0)>0:
            z1.append(z_final)
            if flux_min==0 :
                flux_min1=np.min(flux_no0)
                var1=flux_max/flux_min1
            else:
                var1=flux_max/flux_min
            var.append(var1)
            delta_flux=[]
            delta_mjd=[]
            ratio=[]
            for n in range(0,len(flux)-1,1):        
                delta_flux1=abs(flux[n+1]-flux[n])
                delta_mjd1=abs((mjd[n+1]-mjd[n])*24*3600)
                ratio1=delta_flux1/delta_mjd1
                ratio.append(ratio1)
            min_delta=np.max(ratio)
            ratio_y.append(min_delta)
            i=i+1
        else:
            i=i+1
    else:
        i=i+1
print(ratio_y)
import math
plt.figure()
log_ratio=[math.log10(n) for n in ratio_y]
plt.subplot(2,1,1)
plt.scatter(z1,var,marker='+')
plt.ylabel('variability')
plt.subplot(2,1,2)
plt.scatter(z1,log_ratio,marker='|')
#plt.yscale('log')
plt.ylabel('max($\Delta$_flux/$\Delta$_t)')
plt.xlabel('z')
plt.show()
plt.savefig('/home/ashley/xray/76',format='png')
plt.close()
cxo_sdss.close()
csc.close()                
#file.close()
